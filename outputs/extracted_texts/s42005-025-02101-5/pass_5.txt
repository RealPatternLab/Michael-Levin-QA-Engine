Neuroevolution of decentralized decision-
making in N-bead swimmers leads to
scalable and robust collective locomotion

Many microorganisms swim by performing larger non-reciprocal shape deformations that are initiated
locally by molecular motors. However, it remains unclear how decentralized shape control determines
the movement of the entire organism. Here, we investigate how efficient locomotion emerges from
coordinated yet simple and decentralized decision-making of the body parts using neuroevolution
techniques. Our approach allows us to investigate optimal locomotion policies for increasingly large
microswimmer bodies, with emerging long-wavelength body shape deformations corresponding to
surprisingly efficient swimming gaits. The obtained decentralized policies are robust and tolerant
concerning morphological changes or defects and can be applied to artificial microswimmers for
cargo transport or drug delivery applications without further optimization "out of the box". Our work is
of relevance to understanding and developing robust navigation strategies of biological and artificial
microswimmers and, in a broader context, for understanding emergent levels of individuality and the
role of collective intelligence in Artificial Life.

Microorganisms are ubiquitous in nature and play an essential role in many
biological phenomena, ranging from pathogenic bacteria affecting our
health to phytoplankton as a key player in the marine ecosystem on a global
scale. A large variety of microorganisms live in viscous environments, and
their motion is governed by the physics of low Reynolds number hydro-
dynamics, where viscous forces dominate over inertia¹⁻⁴. As a consequence,
a common strategy is to periodically deform their body shape in a non-
reciprocal fashion to swim. To thrive in the environment, they have
developed different tailored strategies to exploit their swimming capabilities,
such as actively navigating toward a nutrient-rich source, hunting down
prey, escaping predators, or reproducing⁵,⁶. Besides being of direct biological
relevance, understanding the corresponding navigation strategies of
microorganisms bears potential for biomedical or technical applications,
potentially utilized by synthetic microswimmers deployed as targeted drug
delivery systems⁷⁻¹⁰.

Nature has evolved many different strategies and control mechanisms
for microswimmers to swim fast, efficiently, and adaptive to environmental
conditions: For example, swimming algae cells or sperm cells move with the
help of waving cilia or flagella¹¹, respectively, or amoebae such as
Dictyostelium¹² and unicellular protists such as Euglenia¹³ by deforming
their entire cell body. The associated deformation amplitudes and wave-
lengths can be on the order of the entire size of the organism.

In the last years, Reinforcement Learning¹⁴ (RL) has been applied to
understand navigation strategies of microswimmers¹⁵,¹⁶, for example under
external fluid flow¹⁷ or external fields¹⁸, or to perform chemotaxis in the
presence of chemical gradients¹⁹⁻²³. So far, most of these studies treat
microswimmers as rigid agents, i.e., explicitly omitting body deformations
or other internal degrees of freedom, and simply manipulate their ad hoc
swimming speed and rotation rates for control purposes to perform well in a
particular environment. Only very recent contributions¹⁹,²⁴⁻²⁹ consider the
constraints of physically force-free shape-deforming locomotion of plastic
model microswimmers in an effort to identify swimming gaits that explicitly
utilize the hydrodynamic interactions between different body parts in a
viscous environment. Modeling such a body-brain-environment offers
explicit and more realistic behavior of the response of an organism to
environmental conditions³⁰,³¹.

The locomotion of microswimmers and microrobots moving in viscous
fluids at low Reynolds numbers can be modeled with various numerical
methods of different accuracy. Examples for actively deforming slender fila-
ments as they occur in biological systems or in soft robotics are slender body
theory (e.g., ref. ³²), or Cosserat rod models (e.g., refs. ³³,³⁴). Yet the simplest
models, which usually outperform the aforementioned methods in terms of
computation time, discretize a filament or a microswimmer by inter-
connected beads where hydrodynamic interactions are captured in the


[PAGE 2] Results and discussion

The N-bead swimmer model

Here, we investigate swimming strategies optimized by RL and the corre-
sponding physical implications of N-bead generalized NG³⁵ swimmer
models moving in a fluid of viscosity μ. A swimmer consists of N co-
centrically aligned spheres of radius R located at positions xᵢ(tₖ), i = 1..., N,
at time tₖ. These beads are connected pairwise by massless arms of length
lᵢ(tₖ) = xᵢ₊₁(tₖ) - xᵢ(tₖ), as illustrated in Fig. 1a. The swimmer deforms and
moves by applying time-dependent forces Fᵢ(tₖ) = Fₐ(tₖ) + Fₚ(tₖ) on the
beads. The active forces Fₐ(tₖ) are proposed by RL agents (see below), and
passive restoring forces¹⁹ Fₚ(tₖ) are applied when arm lengths lᵢ(tₖ) becomes
smaller than 0.7L₀, or lager than 1.3L₀, where we choose L₀ = 10R as
the reference arm length. The swimmer is force-free, ∑ᵢFᵢ(tₖ) = 0,
and the bead velocities vᵢ(tₖ) are obtained in the Oseen approximation⁶²,
vᵢ = Fᵢ/(6πμR) + ∑ⱼ≠ᵢFⱼ/(4πμ|xᵢ − xⱼ|), (see the “Hydrodynamic interactions
and numerical details for the N-bead swimmer model" subsection in the
"Methods").


[PAGE 2] Modeling system-level decision-making with decentralized
controllers

To identify the active forces Fₐ(tₖ) on the beads, we assign an ensemble of
independent yet identical controllers to every bead which respectively can
only perceive local information about adjacent beads (such as distances and
velocities of their neighbors) and propose actions to update their respective
states (such as proposing bead-specific forces to update their own posi-
tions). Yet, these bead-specific agents follow a shared objective to collec-
tively self-propel the entire N-bead swimmer's body. More specifically-as
illustrated in Fig. 1 and detailed in the "Artificial neural network-based
decentralized controllers" subsection in the "Methods"-for each time tₖ the
controller associated with the bead i perceives its left- and right-neighbor


[PAGE 9] Conclusions

Our study demonstrates that machine learning of decentralized decision-
making strategies of the distributed actuators in a composite in silico
microswimmer can lead to highly efficient navigation policies of the entire
organism that are, moreover, highly robust with respect to morphological
changes or defects. More specifically, we treat each of the N beads of a
generalized NG microswimmer model as an ANN-based agent that per-
ceives information about its adjacent beads and whose actions induce
activations of adjacent muscles. Via genetic algorithms, we have optimized
such single-bead decision-making centers to collectively facilitate highly
efficient swimming gaits on the system level of the NG swimmer.

In that way, we have identified locomotion strategies for increasingly
large microswimmer bodies, ranging from N = 3 to N = 100, with hydro-
dynamic efficiencies of up to η ≈ 1.5%, close to that of real biological
microswimmers; to the best of our knowledge, this is the first demonstration
of successfully training an (N = 100)-bead microswimmer.

While having focused here on evolving swimming gaits for NG
microswimmers of fixed morphologies, we report that the optimized
decentralized locomotion policies generalize well without any further
optimization towards partly severe morphological changes: policies
optimized for an Nₜ-bead microswimmer are in most cases also highly
effective for (N ≠ Nₜ)-bead morphologies, even if N≫ Nₜ or vice versa. This
renders our approach robust and modular from both a physiological and
information processing point of view⁵⁸,⁵⁹, going well beyond more tradi-
tional, in this sense much more brittle RL applications that are typically
concerned with centralized controllers with a fixed number of inputs and
outputs.

The limiting computational factor in our simulations is not the con-
troller part, but the O(N²) complexity of the hydrodynamic model, which
could be leveraged by further modeling, numerical optimization, or hard-
ware accelerators. However, the scalability of our approach allows us to
generalize the optimized policies as a function of N, again overcoming
limitations posed by traditional RL methods, and leveraging analytical
investigations of the generalized NG model to the limit of N→∞.

As we demonstrate, the inherent robustness and increased structural
and functional plasticity of the here investigated microswimmer locomotion


[PAGE 10] Methods

Hydrodynamic interactions and numerical details for the N-bead
swimmer model

The microswimmer consists of N hydrodynamically interacting beads
located at positions xᵢ(tₖ), i = 1, ..., N, at time tₖ. The bead positions change
over time by applying forces Fᵢ(tₖ), consisting of active (Fₐ(tₖ)) and passive
(Fₚ(tₖ)) contributions. At time tₖ the velocities of the beads vᵢ(tₖ) depend
linearly on the applied forces through the mobility tensor M(tₖ):
vᵢ(tₖ) = ∑ⱼMᵢⱼ(tₖ)Fⱼ(tₖ). Self-mobilities are given by Stokes' formula
Mᵢᵢ = 1/(6πμR), while cross-mobilities describe hydrodynamic interac-
tions, which we consider in the far-field limit in the Oseen approximation:
Mᵢⱼ(tₖ) = 1/(4πμ|xᵢ(tₖ) – xⱼ(tₖ)|). Active forces Fₐ(tₖ) are applied as
described in the main text. We apply passive harmonic spring forces as
pairwise restoring forces Fᵢ,ᵢ₊₁(tₖ) between beads i and i + 1. They depend
on the arm length lᵢ(tₖ) between the beads and are applied if lᵢ(tₖ) < 0.7L₀
such that Fᵢ,ᵢ₊₁(tₖ) = k(lᵢ(tₖ) – 0.7L₀)<0, or if lᵢ(tₖ) > 1.3L₀ such that
Fᵢ,ᵢ₊₁(tₖ) = k(lᵢ(tₖ) – 1.3L₀)>0, where k = 10F₀/R is the spring constant.
Every bead is potentially affected by restoring forces between both neighbor
beads, resulting in a total restoring force Fₚ(tₖ) = −F′ᵢ₋₁,ᵢ(tₖ) + F′ᵢ,ᵢ₊₁(tₖ),
except for the beads at the end, which only have a single neighbor bead
where F₁(tₖ) = F′₁,₂(tₖ) and Fₙ(tₖ) = -F′ₙ₋₁,ₙ(tₖ). This procedure limits
the arm extensions, as can be seen for example, in the inset of Fig. 3a,b. Note,
both the active and passive forces sum up to zero individually ∑ᵢFₐ(tₖ) = 0
and Fₚ(tₖ). The equations of motion of the microswimmer are then
solved using a fourth-order Runge Kutta scheme using a sufficiently small


[PAGE 10] Artificial neural network-based decentralized controllers


[PAGE 11] Genetic algorithm and neuroevolution of single-agent policies
with collective goals